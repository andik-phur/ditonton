// Mocks generated by Mockito 5.3.0 from annotations
// in nontonin_with_clean_arcitectur_and_test_driven_development_flutter/test/presentation/pages/tv_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nontonin_with_clean_arcitectur_and_test_driven_development_flutter/common/state_enum.dart'
    as _i9;
import 'package:nontonin_with_clean_arcitectur_and_test_driven_development_flutter/domain/entities/tv.dart'
    as _i10;
import 'package:nontonin_with_clean_arcitectur_and_test_driven_development_flutter/domain/entities/tv_detail.dart'
    as _i7;
import 'package:nontonin_with_clean_arcitectur_and_test_driven_development_flutter/domain/usecases/get_detail_tv.dart'
    as _i2;
import 'package:nontonin_with_clean_arcitectur_and_test_driven_development_flutter/domain/usecases/get_recomendations_tv.dart'
    as _i3;
import 'package:nontonin_with_clean_arcitectur_and_test_driven_development_flutter/domain/usecases/get_watch_list_status_tv.dart'
    as _i5;
import 'package:nontonin_with_clean_arcitectur_and_test_driven_development_flutter/domain/usecases/remove_tv_watch_list.dart'
    as _i6;
import 'package:nontonin_with_clean_arcitectur_and_test_driven_development_flutter/domain/usecases/save_tv_watch_list.dart'
    as _i4;
import 'package:nontonin_with_clean_arcitectur_and_test_driven_development_flutter/presentation/provider/tv_detail_notifier.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetDetailTv_0 extends _i1.SmartFake implements _i2.GetDetailTv {
  _FakeGetDetailTv_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGetTvRecommendations_1 extends _i1.SmartFake
    implements _i3.GetTvRecommendations {
  _FakeGetTvRecommendations_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeSaveTvWatchlist_2 extends _i1.SmartFake
    implements _i4.SaveTvWatchlist {
  _FakeSaveTvWatchlist_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeGetTvWatchlistStatus_3 extends _i1.SmartFake
    implements _i5.GetTvWatchlistStatus {
  _FakeGetTvWatchlistStatus_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeRemoveTvWatchlist_4 extends _i1.SmartFake
    implements _i6.RemoveTvWatchlist {
  _FakeRemoveTvWatchlist_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeTvDetail_5 extends _i1.SmartFake implements _i7.TvDetail {
  _FakeTvDetail_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [TvDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailNotifier extends _i1.Mock implements _i8.TvDetailNotifier {
  MockTvDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetDetailTv get getTvDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvDetail),
              returnValue:
                  _FakeGetDetailTv_0(this, Invocation.getter(#getTvDetail)))
          as _i2.GetDetailTv);
  @override
  _i3.GetTvRecommendations get getTvRecommendations =>
      (super.noSuchMethod(Invocation.getter(#getTvRecommendations),
              returnValue: _FakeGetTvRecommendations_1(
                  this, Invocation.getter(#getTvRecommendations)))
          as _i3.GetTvRecommendations);
  @override
  _i4.SaveTvWatchlist get saveWatchlistTv => (super.noSuchMethod(
          Invocation.getter(#saveWatchlistTv),
          returnValue:
              _FakeSaveTvWatchlist_2(this, Invocation.getter(#saveWatchlistTv)))
      as _i4.SaveTvWatchlist);
  @override
  _i5.GetTvWatchlistStatus get getTvWatchlistStatus =>
      (super.noSuchMethod(Invocation.getter(#getTvWatchlistStatus),
              returnValue: _FakeGetTvWatchlistStatus_3(
                  this, Invocation.getter(#getTvWatchlistStatus)))
          as _i5.GetTvWatchlistStatus);
  @override
  _i6.RemoveTvWatchlist get removeWatchlistTv =>
      (super.noSuchMethod(Invocation.getter(#removeWatchlistTv),
              returnValue: _FakeRemoveTvWatchlist_4(
                  this, Invocation.getter(#removeWatchlistTv)))
          as _i6.RemoveTvWatchlist);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  _i9.RequestState get tvDetailState =>
      (super.noSuchMethod(Invocation.getter(#tvDetailState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  _i7.TvDetail get tvDetail => (super.noSuchMethod(Invocation.getter(#tvDetail),
          returnValue: _FakeTvDetail_5(this, Invocation.getter(#tvDetail)))
      as _i7.TvDetail);
  @override
  bool get isAddedToWatchListTv =>
      (super.noSuchMethod(Invocation.getter(#isAddedToWatchListTv),
          returnValue: false) as bool);
  @override
  String get watchlistMessageTv => (super
          .noSuchMethod(Invocation.getter(#watchlistMessageTv), returnValue: '')
      as String);
  @override
  List<_i10.Television> get tvRecommendation =>
      (super.noSuchMethod(Invocation.getter(#tvRecommendation),
          returnValue: <_i10.Television>[]) as List<_i10.Television>);
  @override
  _i9.RequestState get tvRecommendationState =>
      (super.noSuchMethod(Invocation.getter(#tvRecommendationState),
          returnValue: _i9.RequestState.Empty) as _i9.RequestState);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i11.Future<void> fetchTvDetail(int? id) =>
      (super.noSuchMethod(Invocation.method(#fetchTvDetail, [id]),
              returnValue: _i11.Future<void>.value(),
              returnValueForMissingStub: _i11.Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> addWatchlist(_i7.TvDetail? tvDetail) =>
      (super.noSuchMethod(Invocation.method(#addWatchlist, [tvDetail]),
              returnValue: _i11.Future<void>.value(),
              returnValueForMissingStub: _i11.Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> loadWatchlistStatusTv(int? id) =>
      (super.noSuchMethod(Invocation.method(#loadWatchlistStatusTv, [id]),
              returnValue: _i11.Future<void>.value(),
              returnValueForMissingStub: _i11.Future<void>.value())
          as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromWatchlistTv(_i7.TvDetail? tvDetail) =>
      (super.noSuchMethod(Invocation.method(#removeFromWatchlistTv, [tvDetail]),
              returnValue: _i11.Future<void>.value(),
              returnValueForMissingStub: _i11.Future<void>.value())
          as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i12.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
